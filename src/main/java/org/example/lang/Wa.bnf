{
  parserClass="org.example.lang.parser.WaParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Wa"
  psiImplClassSuffix="Impl"
  psiPackage="org.example.lang.psi"
  psiImplPackage="org.example.lang.psi.impl"

  elementTypeHolderClass="org.example.lang.psi.WaTypes"
  elementTypeClass="org.example.lang.psi.WaElementType"
  tokenTypeClass="org.example.lang.psi.WaTokenType"
}

waFile ::= program

program ::= stmt*

stmt ::= (ifStmt|whileStmt|returnStmt|exprStmt|declareStmt)

ifStmt ::= IF LPAREN expr RPAREN LBRACE block RBRACE ELSE LBRACE block RBRACE

whileStmt ::= WHILE LPAREN expr RPAREN LBRACE block RBRACE

returnStmt ::= RETURN expr SEMICOLON

exprStmt ::= expr SEMICOLON

declareStmt ::= varDeclareStmt | funcDeclareStmt

varDeclareStmt ::= VAR IDENT (ASSIGN expr)? SEMICOLON

funcDeclareStmt ::= FUNC IDENT LPAREN RPAREN LBRACE block RBRACE

block ::= stmt*

expr ::= literal_expr (ADD literal_expr)*

literal_expr ::= NUMBER|STRING|IDENT
